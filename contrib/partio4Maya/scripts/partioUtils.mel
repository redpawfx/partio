/* partio4Maya  3/21/2012, John Cassella  http://luma-pictures.com and  http://redpawfx.com
PARTIO Export GUI
Copyright 2012 (c)  All rights reserved

Redistribution and use in source and binary forms, with or without
modification, are permitted provided that the following conditions are
met:

* Redistributions of source code must retain the above copyright
notice, this list of conditions and the following disclaimer.

* Redistributions in binary form must reproduce the above copyright
notice, this list of conditions and the following disclaimer in
the documentation and/or other materials provided with the
distribution.

Disclaimer: THIS SOFTWARE IS PROVIDED BY  "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING,
BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY, FITNESS
FOR A PARTICULAR PURPOSE, NONINFRINGEMENT AND TITLE ARE DISCLAIMED.
IN NO EVENT SHALL  THE COPYRIGHT HOLDER OR
CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND BASED ON ANY
THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGES.
*/

global  proc string[]  partioGetBaseFileName(string $inFileName) {
	string $preDelim , $postDelim, $ext = "";
	int $padding = 0;
	string $outFileName[] = {$inFileName,$preDelim,$postDelim, $ext, $padding};
	int $l = `size $inFileName `;
	int $foundExt = 1;
	string $breakdownFileName = $inFileName;
	while ($foundExt) {
		$l = `size $breakdownFileName`;
		if ( `gmatch $breakdownFileName "*[a-z]"` || `gmatch $breakdownFileName "*[A-Z]"`) {
			$ext = (`substring $breakdownFileName $l $l`)+$ext;
			$breakdownFileName = `substring $breakdownFileName 1 ($l-1)`;
		} else {
			$foundExt = 0;
		}
	}
	if (`size $ext` > 0) {
		$outFileName[3] = $ext;
		// special case for static lidar files
		if ($ext == "pts" || $ext == "xyz") {
			return $outFileName;
		}
		$outFileName[0] = $breakdownFileName;
	} else {
		return $outFileName;
	}
	$l = `size $breakdownFileName`;
	string $last = `substring $breakdownFileName $l $l`;
	if ( $last == "_" || $last == ".") {
		$outFileName[2] = $last;
		$breakdownFileName = `substring $breakdownFileName 1 ($l-1)`;
		$outFileName[0] = $breakdownFileName;
	} else {
		return $outFileName;
	}
	int $foundNum = 1;
	while ($foundNum) {
		$l = `size $breakdownFileName`;
		if ( `gmatch $breakdownFileName "*[0-9]"`) {
			$breakdownFileName = `substring $breakdownFileName 1 ($l-1)`;
			$padding ++;
		} else {
			$foundNum = 0;
		}
	}
	if ($padding > 0) {
		$outFileName[4] = $padding;
		$outFileName[0] = $breakdownFileName;
	} else {
		$outFileName[4] = -1;
		return $outFileName;
	}
	$l = `size $breakdownFileName`;
	string $last = `substring $breakdownFileName $l $l`;
	if ( $last == "_" || $last == ".") {
		$outFileName[1] = $last;
		$outFileName[0] = `substring $breakdownFileName 1 ($l-1)`;
	} else {
		return $outFileName;
	}
	return $outFileName;
}

/// using the same  callback for all partio4Maya nodes AE templates
global proc int pioAEassignCacheFileCB( string $fileAttribute, string $fileName, string $fileType ) {
	string $components[];
	tokenize $fileAttribute "." $components;
	string $nodeName = $components[0];
	string $fileNameComp[];
	string $baseFileName = basename($fileName,"");
	print $baseFileName;
	string $fileParts[] = `partioGetBaseFileName($baseFileName)`;
	string $fileBaseName = $fileParts[0];
	int $pad = $fileParts[4];
	string $ext = $fileParts[3];
	setAttr ($nodeName + ".cachePrefix") -type "string" $baseFileName;
	int $extIndex = 0;
	switch ($ext)
	{
		case "bgeo":
			$extIndex = 0;
			break;
		case "geo":
			$extIndex = 1;
			break;
		case "pda":
			$extIndex = 2;
			break;
		case "pdb":
			$extIndex = 3;
			break;
		case "pdc":
			$extIndex = 4;
			break;
		case "mc":
			$extIndex = 5;
			break;
		case "bin":
			$extIndex = 6;
			break;
		case "prt":
			$extIndex = 7;
			break;
		case "ptc":
			$extIndex = 8;
			break;
		case "pts":
			$extIndex = 9;
			break;
		case "xyz":
			$extIndex = 10;
			break;
		case "pcd":
			$extIndex = 11;
			break;
		case "ass":
			$extIndex = 12;
			break;
		default:
			$extIndex = 4;
			break;
	}
	// if padding is not -1 we have a number in the file name otherwise we want to use static cache
	if ($pad >=0){
		setAttr ($nodeName + ".staticCache") 0;
	} else {
		setAttr ($nodeName + ".staticCache") 1;
	}
	
	if ($ext == "pdc"){
		$pad = 0;
	} else if ($ext == "mc") {
		$pad = 0;
	} else if ($ext == "pts" || $ext == "xyz") {
		$pad = 0;
	}
	setAttr ($nodeName + ".cacheFormat") $extIndex;
	$fileName = substituteAllString($fileName, basename($fileName, ""), "");
	setAttr $fileAttribute -type "string" $fileName;
	// This will force an update to display the effects
	// of the new cachefile.
	currentTime `currentTime -q`;
	string $currentDir = `workspace -q -dir`;
	retainWorkingDirectory ($currentDir);
	return true;
}

global proc pioAEcacheFileBrowser( string $cmd, string $cacheName ){
	string  $workspace = `workspace -q -fn`;
	setWorkingDirectory $workspace "diskCache" "data";
	fileBrowser ($cmd, "Partio Cache Directory", "", 0);
}

global proc string pioStripNodeName (string $nodeName){
	string $buffer[];
	tokenize $nodeName "." $buffer;
	return $buffer[0];
}

global proc pioAEoutpathReplace(string $cacheName){
	string $fileName = `getAttr $cacheName`;
	string	$buffer[];
	tokenize($cacheName, ".", $buffer);
	string	$nodeName = $buffer[0];
	// Filename Attribute
	connectControl diskNameField $cacheName;
	string $command = "pioAEassignCacheFileCB " + " " + $cacheName;
	button -e -c ("pioAEcacheFileBrowser \"" + $command + "\" " + $nodeName ) browser;
}

global proc pioAEoutpathNew(string $cacheName){
	setUITemplate -pst attributeEditorTemplate;
		columnLayout -adj true;
			rowLayout -nc 3 outpathLayout;
				text -label "Particle Path" outpathText;
				textField diskNameField;
					symbolButton -image "navButtonBrowse.png" browser;
				setParent ..;
		setParent ..;
	setUITemplate -ppt;
	setParent ..;
	pioAEoutpathReplace( $cacheName );
}

global proc attachPartioInstancerToInstancer(){
	string $sel[] =`ls -sl`;
	string $inst;
	string $partio;
	for ($s in $sel){
		if (`nodeType $s` == "transform"){
			string $shape[] = `listRelatives -s $s`;
			$s = $shape[0];
		}
		if (`nodeType $s` == "instancer"){
			$inst = $s;
		} else if (`nodeType $s` == "partioInstancer") {
			$partio = $s;
		}
	}
	if (`size $inst` && `size $partio`){
		connectAttr -f ($partio + ".instanceData") ($inst+".inputPoints");
	}
}
